// SETTINGS
// These are the general settings for the service. There's also a settings.development.json
// and a settings.production.json, each one containing environment-specific settings.
// In 99% of the cases, customizations should be set on the settings.private.json file.

{
    "amazon": {
        // You can add an extra to every Amazon payment, to cover for occasional fees and late
        // payments. For instance set this to 1.01 to add a 1% on top of amazon order values
        // transferred to your Amazon account.
        "paymentMultiplier": 1
    },
    "app": {
        // Web admin authentication.
        "auth": {
            // Default username is admin, but you can of course change to your desired username.
            "user": "admin",
            // Password needed to access the web admin UI. Please change this on your private settings!
            "password": null
        },
        // Port in which the server should run.
        "port": 8833,
        // Name of this service, will also be used as the device name when connecting to bunq.
        "title": "Jarbunq",
        // Frontend files served by Expresser are all located on /assets.
        "publicPath": "./assets/",
        // Use PUG for view rendering.
        "viewEngine": "pug",
        "viewPath": "./assets/views/"
    },
    "bunq": {
        "api": {
            // Default 16 bytes crypto hex key for API communication, it's strongly advised that you update
            // this value on your settings.private.json file!
            "cryptoKey": "13841C2E4529CFB112324B7DE0EDB781"
        },
        // Enable callbacks (notification filters)? If so, bunq will push certain events from your bank
        // accounts to Jarbunq (mostly payments and transactions), so it can act upon them.
        "callbacks": {
            "enabled": true,
            // Save full body of incoming notifications from bunq on the database?
            "save": false
        },
        // Set to false to NOT add Jarbunq related notes to the payments. Default is true,
        // and it's highly recommended to keep it true :-)
        "addPaymentNotes": true,
        // Set to true to use draft payments (that needs approval) by default.
        // Please note parts of the code can still force the options.draff.
        "draftPayment": false,
        // Safeguard to avoid automatic payments of large amounts, default is 800 EUR.
        // Payments with value higher than that will automatically be set as draft payments.
        "maxPaymentAmount": 800,
        // Safeguard to avoid low balances on accounts, by default keep at least 1 EUR.
        "minBalance": 1,
        // Auto refresh user data automatically once per hour by default, value in minutes.
        "refreshMinutes": 60,
        // OAuth authorizations must be renewed at least once every 90 days.
        "tokenLifetimehDays": 90
    },
    // Connect Assets module options.
    "connectAssets": {
        "buildDir": "assets/build",
        "paths": ["assets/scripts", "assets/styles"]
    },
    "database": {
        "crypto": {
            // Cipher used for database encryption. The default "aes-256-ctr" is pretty secure.
            "cipher": "aes-256-ctr",
            // Default encryption key, it's HIGHLY RECOMMENDED that you change this key to your own either
            // via the settings.private.json, or using the $SMU_database_crypto_key environment variable.
            "key": "bunq-DB-cryp7o-k3y-plssss-CHANGE",
            // Database encryption is enabled by default.
            "enabled": true
        }
    },
    "email": {
        // Auto upgrade connection to TLS when needed?
        "autoTLS": true,
        // If true, incoming emails will have its headers checked for extra security.
        // Change to false if you're having problems with email signatures, for instance
        // if you host your own email server and does not validate the headers.
        "checkSecurity": true,
        // When the app starts up, it will initially fetch emails received on the last 24 hours.
        // Then emails are fetched as they arrive.
        "fetchHours": 24,
        // Mark processed messages as read? Set to false to keep all messages unread.
        "markAsRead": true,
        // When failed to open the email inbox, retry after 60 seconds by default, value in milliseconds.
        "retryInterval": 60000,
        // Send weekly reports to the owner's email?
        "weeklyReports": true
    },
    // Eventhooks must be defined on your settings.private.json file!
    "eventhooks": {
        // For detailed instructions, see https://github.com/igoramadas/jarbunq/wiki/Eventhooks
    },
    "general": {
        // Use UTF8 as default encoding for files and streams.
        "encoding": "utf8"
    },
    // Notification options (from Jarbunq to the user). Not to be confused with notification
    // filters / callbacks from bunq to Jarbunq.
    "notification": {
        "events": {
            // Do not notify successful payments by default.
            "paymentOk": false,
            // Notify payment failures.
            "paymentError": true
        }
    },
    "routes": {
        // IP whitelistig. Each key represents a route, plus the "global" route.
        "ipWhitelist": {
            // By default accept from any IP. Ideally you should have a firewall with the correct
            // IP whitelisting running in front of Jarbunq (your router if hosting at home, or
            // load balancer in the cloud). But you cal set the value below to an array of
            // valid IPs if you want to do this check directly on Jarbunq.
            "global": null
        }
    },
    "strava": {
        // API endpoints and credentials from Strava. You should add the clientId and
        // clientSecret on your settings.private.json file.
        "api": {
            "baseUrl": "https://www.strava.com/api/v3",
            "authUrl": "https://www.strava.com/oauth/authorize",
            "tokenUrl": "https://www.strava.com/oauth/token",
            "scope": "activity:read_all,profile:read_all"
        },
        "payments": {
            // How much should be paid per kilometer ridden? Default 3 cents.
            "pricePerKm": 0.03,
            // Process activities and payment daily or weekly.
            // If daily weekly payments will happen on Mondays.
            "interval": "weekly",
            // Time of the day in which payments are processed (24h, HH:MM format, local time).
            "time": "16:00"
        }
    }
}
